"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var ddSdk_1=require("../lib/ddSdk");require("../lib/polyfills/objectKeys");var mockData={},eventMap={};exports.init=function(e){var t=ddSdk_1.ddSdk.getExportSdk(),o=ddSdk_1.ddSdk.getPlatformConfigMap()[t.env.platform];t.devConfig({isAuthApi:!1}),ddSdk_1.ddSdk.setPlatform({platform:t.env.platform,authMethod:o&&o.authMethod||"config",bridgeInit:function(){return Promise.resolve(function(t,n){return mockData[t]?mockData[t](n):e&&e.isOnlyMockWhenConfig&&o?o.bridgeInit().then(function(e){return e(t,n)}):Promise.reject({errorMessage:"Not found mock data",errorCode:"999"})})},event:{on:function(e,t){eventMap[e]?eventMap[e].push(t):eventMap[e]=[t]},off:function(e,t){var o=eventMap[e];if(o){var n=o.findIndex(function(e){return e===t});-1!==n&&o.splice(n,1)}}}}),e&&e.mockApiMap&&exports.batchAppendMockApiResult(e.mockApiMap)},exports.emitEvent=function(e){ddSdk_1.ddSdk.bridgeInitFn().then(function(){var t=eventMap[e];t&&t.forEach(function(e){e({})})})},exports.appendMockApiResult=function(e,t){var o=ddSdk_1.ddSdk.getExportSdk();if("function"==typeof t)mockData[e]=t;else{var n=t;mockData[e]=function(e){return n.isSuccess?Promise.resolve(n.payload):Promise.reject(n.payload)}}o.devConfig({disbaleDealApiWhiteList:Object.keys(mockData)})},exports.batchAppendMockApiResult=function(e){Object.keys(e).forEach(function(t){exports.appendMockApiResult(t,e[t])})};